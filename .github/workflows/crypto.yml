name: Crypto AI Bot

on:
  schedule:
    - cron: "*/30 * * * *"     # Every 30 minutes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-signals:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip packages
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas numpy python-dotenv jupyter

      # ✅ Convert notebook to Python
      - name: Convert notebook to Python
        run: |
          if [ -f "crypto_ai_backtest_multi.ipynb" ]; then
            echo "Converting crypto_ai_backtest_multi.ipynb → crypto_ai_backtest_multi.py ..."
            jupyter nbconvert --to script crypto_ai_backtest_multi.ipynb --output crypto_ai_backtest_multi.py
          fi

      # ✅ Sync logic from backtest script into signal bot
      - name: Sync logic into crypto_signal.py
        run: |
          if [ -f "crypto_ai_backtest_multi.py" ]; then
            echo "Updating crypto_signal.py with latest logic..."
            # Copy strategy or function definitions from backtest file into crypto_signal.py
            echo "# --- AUTO-GENERATED FROM crypto_ai_backtest_multi.py ---" > crypto_signal.py
            tail -n +1 crypto_ai_backtest_multi.py >> crypto_signal.py
            echo "\n# --- END OF AUTO SYNC ---" >> crypto_signal.py
          else
            echo "⚠️ No backtest file found, skipping sync."
          fi

      # ✅ Run crypto signal bot
      - name: Run crypto signal bot
        env:
          SIGNAL_EMAIL: ${{ secrets.SIGNAL_EMAIL }}
          ZAPIER_URL: ${{ secrets.ZAPIER_URL }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          echo "Running crypto_signal.py ..."
          python crypto_signal.py || exit 1

      # ✅ Commit results
      - name: Commit and push signal file
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull origin main || true
          git add last_signals.json crypto_ai_backtest_multi.py crypto_signal.py
          git commit -m "Auto-update signal logic + last_signals.json [skip ci]" || echo "No changes"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git main || echo "Push skipped"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crypto-results
          path: |
            *.csv
            *.txt
            last_signals.json
          if-no-files-found: ignore
