name: Crypto AI Bot

on:
  schedule:
    - cron: "*/30 * * * *"   # every 30 minutes
  workflow_dispatch:

jobs:
  crypto-ai:
    runs-on: ubuntu-latest
    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: ‚ôªÔ∏è Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üì¶ Install dependencies (only if cache miss)
        run: |
          echo "Installing dependencies if not cached..."
          pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: üöÄ Run Crypto AI Bot
        env:
          ZAPIER_URL: ${{ secrets.ZAPIER_URL }}
          SIGNAL_EMAIL: ${{ secrets.SIGNAL_EMAIL }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          echo "üöÄ Starting Crypto AI Bot..."
          python crypto_signal.py

      - name: üßæ Upload signals output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: crypto-signals
          path: utils/signals.txt
